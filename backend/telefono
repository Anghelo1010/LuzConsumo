import requests

# Configurar la direcci√≥n IP de la computadora (Reemplaza con la IP real)
SERVER_IP = "192.168.1.129"
SERVER_PORT = 5000
URL = f"http://{SERVER_IP}:{SERVER_PORT}/generar_datos"

def verificar_conexion():
    """Verifica si el servidor est√° activo antes de enviar datos."""
    try:
        response = requests.get(f"http://{SERVER_IP}:{SERVER_PORT}/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Conexi√≥n con el servidor establecida.")
        else:
            print(f"‚ö†Ô∏è El servidor respondi√≥ con c√≥digo: {response.status_code}")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå No se pudo conectar al servidor: {e}")
        exit()

def enviar_datos():
    """Env√≠a datos al servidor Flask en la PC."""
    verificar_conexion()  # Verificar conexi√≥n antes de comenzar
    
    while True:
        cantidad = input("Ingresa la cantidad de datos a agregar (o 'salir' para terminar): ")

        if cantidad.lower() == 'salir':
            print("üëã Hasta luego!")
            break

        if not cantidad.isdigit() or int(cantidad) <= 0:
            print("‚ùå Ingresa un n√∫mero v√°lido mayor a 0.")
            continue

        data = {"cantidad": int(cantidad)}

        try:
            response = requests.post(URL, json=data, timeout=10)
            if response.status_code == 200:
                print(f"‚úÖ {cantidad} datos enviados correctamente.")
            else:
                print(f"‚ùå Error en la petici√≥n: {response.status_code} - {response.text}")
        except requests.exceptions.RequestException as e:
            print(f"‚ùå No se pudo conectar al servidor: {e}")

if _name_ == "_main_":
    enviar_datos()
